<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：5/12页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">167</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer能够模拟不同类型的虚拟用户负载策略，包括：</span><span class='green'>持续增加虚拟用户数、动态变化虚拟用户数、全天候虚拟用户数等，每一种都可以进行不同参数的设置；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">168</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer支持的协议很广泛，主要支持的协议如下所示：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">169</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>流媒体协议-Macromedia Flex/AMF、Streaming（MS，Real）等</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">170</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>数据库访问协议-ODBC、Oracle OCI等</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">171</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>网络协议-HTTP/HTTPS、SMTP/POP、FTP、TCP/IP等</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">172</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其他商用的负载测试工具还有HP LoadRunner、RadView WebRunner等，通常这些商用的工具由于功能很完善，软件公司花费了巨大的人力资金进行开发，所以这些软件一般都会比较昂贵。</span><a href='../sentence_detail/417.htm' target='right' class='orange' >市面上还会有一些免费或者开源的测试软件，如：</a><span class='green'>OpenSTA、WAS（Web Application Stress Tool）、Apache JMeter等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">173</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/419.htm' target='right' class='orange' >其中， WAS是由微软的 web测试人员开发的，能够特别地执行真实网站的负载测试，该</a><span class='green'>工具能够采用少数的几台计算机设备来模拟很多的使用者对网站进行并发请求的负载。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">174</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4.3Apache JMeter</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">175</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4.3.1JMeter性能测试工具的体系架构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">176</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>JMeter是一个很流行的开源性能测试工具，纯Java编写的，它可用于动态以及静态两种系统的性能测试。</span><span class='green'>并且可以模拟系统在不同负载压力情况下系统会有什么样的反应，这种反应带来什么样的结果，</span><span class='green'>以及在不断加压的时候，系统会不会承受的住，找出系统所能承受的极端压力高峰值，</span><span class='green'>这样就可以为系统调优做好基础数据准备的工作。</span><span class='green'>JMeter主要是使用各种原件来创建测试所要用到的测试用例，也就是新建一个测试计划，</span><span class='green'>这个计划描述了测试执行时的步骤，并且，可以在查看结果树等的图标中直观的显示出来，</span><span class='green'>而执行的结果或脚本则可以保存下来（ XML格式）。</span><a href='../sentence_detail/430.htm' target='right' class='orange' >在JMeter中一个测试计划会包括线程组、控制器、配置元件、定时器、前置处理器、后置处理器、断言、监听器等[19]。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">177</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>以下将会对这几个部分一一介绍：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">178</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>线程组就是控制JMeter执行测试计划时所使用的线程数量，可以设置每个线程的间隔实际，也可以设置测试要执行的次数，当然，这些线程之间是相互独立的，互相不干扰的执行测试计划。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">179</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.6 JMeter操作界面</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">180</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/434.htm' target='right' class='orange' >采样器（Sampler）以及逻辑控制器（Logic Controllers）被称为控制器。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">181</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>采样器（Sampler）：</span><span class='green'>它是JMeter的基础元件，用户能够使用它向服务器提出交互连接，如：</span><a href='../sentence_detail/437.htm' target='right' class='orange' >HTTP请求器等，然后采样器会等待服务器的响应，直到响应超时。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">182</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>逻辑控制器：</span><span class='green'>控制脚本根据用户的逻辑顺序来执行测试，例如控制JMeter什么时间提出交互请求。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">183</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>配置元件（Config Elements）：</span><span class='green'>配置元件是与测试脚本中的设置有着一定关联度，例如：</span><span class='green'>设置用户变量、cookies设置、HTTP请求头等，它是与取样器关联在一起工作的，可以定制和修改服务器发送到请求，但是却不能添加请求。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">184</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>定时器：</span><span class='green'>它保存了与时间有关联的信息。</span><span class='green'>定时器会在连续请求的期间添加延迟时间，如思考时间，这样服务器请求的频率就不会太过频繁，</span><span class='green'>如果不这样，有可能在很短的时间内，服务器接收到了大量的请求，从而导致服务器宕机。</span><a href='../sentence_detail/447.htm' target='right' class='orange' >定时器是设置在线程组中，如果在一个线程组中存在多个定时器，则延迟的时间是所有定时器中延时时间的总和。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">185</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>前置处理器：</span><span class='green'>所有采样器在执行之前，都会先执行前置处理器中的动作，例如：</span><a href='../sentence_detail/450.htm' target='right' class='orange' >对用户参数进行配置设定、重写URL等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">186</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>后置处理器：</span><span class='green'>所有的采样器在执行完成自己的动作之后，都要执行后置处理器中的操作进行后置处理，例如：</span><span class='green'>获取响应数据，获取其中的一些数值等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">187</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>断言：</span><a href='../sentence_detail/455.htm' target='right' class='orange' >用于校验从服务器获取的响应数据是否与自己期望的数据一致。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">188</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>监听器：</span><a href='../sentence_detail/457.htm' target='right' class='orange' >用于获取JMeter在测试过程中的一些测试结果，并能够按照不同的形式予以展示。</a><a href='../sentence_detail/458.htm' target='right' class='orange' >监听器有不同的种类，包括图像结果监听器、结果树监听器等。</a><a href='../sentence_detail/459.htm' target='right' class='orange' >其中图像结果监听器可以以图表的形式展现响应时间等信息。</a><span class='green'>结果树监听器则用HTML或者XML形式来展现取样器的请求和响应。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">189</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>而JMeter源码的基本框架如下图4.2所示，打开bin文件里的jmeter.bat就可以运行JMeter了。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">190</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.7 JMeter软件源码</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">191</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其中bin文件夹包含启动JMeter所必需的.bat、.cmd以及.sh等文件，还包含了ApacheJMeter.jar文件和一些属性文件；</span><a href='../sentence_detail/464.htm' target='right' class='orange' > lib目录包含了 JMeter所需的所有 jar文件，其中的 ext文件夹包含了 JMeter的核心 jar包，</a><span class='green'>junit文件夹存放 JUnit测试脚本，用户可以把扩展功能所使用的 jar包直接放置在 lib目录下；</span><span class='green'>docs文件夹下包含了JMeter的Java Docs，printable_docs的usermanual文件夹下包含了JMeter用户使用手册的.html和pdf文件；</span><span class='green'>estras目录中包含了对构建工具Ant支持的文件，用户可以使用Ant来实现测试自动化，如：</span><span class='green'>批量脚本、报表的生成等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">192</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4.3.2JMeter工作原理及执行流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">193</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>JMeter的工作原理其实并不复杂，简单的来说，它可以被用来当作 Web服务器与浏览器这两者中间的代理网关，</span><a href='../sentence_detail/471.htm' target='right' class='orange' >如此就可以很容易的并且准确的获取浏览器提出的请求和 Web服务器给出的响应，</a><span class='green'>如此 JMeter便很容易地生成操作者想得到的性能测试脚本。</span><span class='green'>之后，JMeter就可以通过线程组来模拟真实用户对Web服务器的访问压力，如图4.3所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">194</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.8 JMeter工作原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">195</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>JMeter可以按照如下几种模式进行启动， GUI图像界面模式、服务器模式、帮助模式、版本模式、独立模式、命令模式，</span><span class='green'>一般用户最常用的是图形界面模式，它能够提供给用户一个容易使用操作、具有良好交互性的体验。</span><a href='../sentence_detail/477.htm' target='right' class='orange' >在执行分布式系统测试时，一般会采用服务器模式。</a><a href='../sentence_detail/478.htm' target='right' class='orange' >一份齐全的测试计划一般都会包含如上所述的单一甚至许多线程组、采样器、逻辑控制器、定时器、监听器、断言、配置元件。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">196</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>当点击\bin\jmeter.bat后，就会打开如图4.1所示的JMeter界面，下文对JMeter的基本操作进行介绍[20]：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">197</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>添加/删除测试元件：</span><span class='green'>为测试计划添加测试元件，只需要在“测试计划”图标上，右键，即可在打开的目录树上选择需要的元件，如下图所示</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">198</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.9 JMeter添加元件</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">199</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/483.htm' target='right' class='orange' >在添加好的元件上面点击右键，在弹出的菜单栏，选取“删除”既可以移除该元件；</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">200</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>加载/保存测试元件：</span><span class='green'>右键已经添加好的测试元件，选择“合并”按钮，然后从对话框中中选择外部文件，这样就可以将测试元件添加进来；</span><span class='green'>假如选取“另存为”选择项，那么可以以文件的形式保存组件，以后的操作就可以仍然使用该元件；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">201</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>配置测试元件：</span><span class='green'>点击已添加的测试元件，在界面右侧用户可以设定元件的参数；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">202</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>保存测试计划：</span><a href='../sentence_detail/490.htm' target='right' class='orange' >选择“文件”栏下的“保存测试计划”或者按下快捷键ctrl+s；</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">203</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>运行测试计划：</span><span class='green'>选择“运行”菜单下的“启动”按钮，可以运行测试计划，界面右上角的正方形内的数值代表已经激活的线程数/总线程数；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">204</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>终止测试：</span><span class='green'>能够执行停止或者关闭两个指令来终止测试；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">205</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>错误记录：</span><span class='green'>JMeter可以讲警告或者错误记录在jmeter.log文件中。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">206</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>JMeter的测试脚本正常启动后，就可以按照.jmx脚本中以XML格式描述流程进行性能测试；</span><span class='green'>测试结束之后，能够在监控器中查看测试的结果。</span><span class='green'>JMeter脚本的执行流程如下图4.5所示[21]：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">207</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.10 JMeter脚本运行流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">208</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.5本章小结</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">209</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/502.htm' target='right' class='orange' >本章简要描述了系统性能测试方面的内容，</a><a href='../sentence_detail/503.htm' target='right' class='orange' >主要包括软件性能测试的概念、软件性能测试的目的、软件性能测试的过程、软件测试国内外现状分析、软件性能测试方法以及软件性能测试相关工具的介绍，</a><a href='../sentence_detail/504.htm' target='right' class='orange' >这样就可以对软件性能测试有个基础的了解。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">210</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/505.htm' target='right' class='orange' >第3章基于web的医疗保险信息管理系统的性能测试的需求分析</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">211</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/506.htm' target='right' class='orange' >3.1基于web的医疗保险信息管理系统概述</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">212</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.1.1web系统概述</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">213</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>web软件系统是一种通过 web进行交互访问的应用，其最突出的优点是用户只需要通过浏览器既可以进行访问系统，</span><a href='../sentence_detail/509.htm' target='right' class='orange' >而不需要再安装另外的软件，其采用的是浏览器/服务器（ B/ S）模式[22]。</a><a href='../sentence_detail/510.htm' target='right' class='orange' > web应用的系统结构如下图3.1所示，组成部分通常会有客户端、 web服务器、数据库服务器三个部分，</a><a href='../sentence_detail/511.htm' target='right' class='orange' >其中客户端用于展示服务器返回的数据， web服务器用于处理客户端发送的请求，</a><a href='../sentence_detail/512.htm' target='right' class='orange' >数据库服务器用于存储以及管理整个系统中的数据。</a>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：5/12页
]
</div>

<br><br><br>
<div style="margin-left:25px">

<img src="../../images/guanwang.gif">
</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2015 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
