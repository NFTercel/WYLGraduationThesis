<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_3.htm">上一页</a>
<a class="pagelink" href="paper_5.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：4/12页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">132</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.2软件测试国内外现状</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">133</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>目前，国外的软件行业把软件测试过程作为系统开发中的关键过程，软件测试以及变成了非常独立的行业。</span><span class='green'>而且在许多国外的一些大型软件企业中，软件测试人员在开发测试人员中所占的比例非常高，一般都是70%-80%[9]。</span><span class='green'>在web性能测试方面，国外的一些大学机构对其研究的成果很显着，这些大学机构主要包括美国的乔治梅森George Mason大学、英国的杜伦Durham大学等[10]。</span><span class='green'>自动化测试系统已经变得更加的通用化、智能化、标准化，其中上世纪90年代以来，以综合通用的自动化测试为主导，替换某一系列的产品[11]。</span><span class='green'>国内外在性能测试探究方面获得了一定的进展并获得了许多的成就，例如：</span><a href='../sentence_detail/317.htm' target='right' class='orange' >创新了许多性能测试的模型、测试方法以及测试对策等，例如：</a><a href='../sentence_detail/318.htm' target='right' class='orange' >印孚瑟斯技术InfosysTechnologies公司研究的基于对象的测试模型等。</a><a href='../sentence_detail/319.htm' target='right' class='orange' >从公开源代码免费的测试工具到商用昂贵的测试工具，现如今许多国外公司机构开发了许多性能测试的工具。</a><span class='green'>一些功能完善的工具，它们的开发量很是庞大，所以这些工具一般都是非常昂贵，例如：</span><span class='green'>Compuware公司的QALoad；</span><a href='../sentence_detail/322.htm' target='right' class='orange' >HP Mercury的LoadRunner测试工具，SilkPerformer最高级的企业级别负载测试工具，RadView公司的WebRunner性能测试与分析工具。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">134</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其中， HP LoadRunner是一款自动化性能测试产品，它能够预先判断系统行为以及性能，该产品来自于为 HP进行系统负载压力测试而研制的自动化测试产品，</span><span class='green'>它能够检查系统在实际生成负载时的行为以及性能[12]。</span><span class='green'>在2006年11月份HP收购了Mercury Interactive。</span><span class='green'>通过模拟出成百上千的虚拟用户，LoadRunner来执行实际中用户在客户端上的动作，例如：</span><span class='green'>IE浏览器，使用 HTTP协议发送请求到 IIE或者 Apache web服务器，它可以模拟成千上万的并发用户将应用程序通过严酷的真实用户负载以及实时性监控，</span><a href='../sentence_detail/328.htm' target='right' class='orange' >而从关键的基础设施组件（ web服务器、数据库服务器等）收集信息来进行详细分析探索特定行为的原因，</a><span class='green'>找出系统的问题缺陷。</span><span class='green'>LoadRunner能够进行多种协议包负载测试：</span><span class='green'>.NET记录/回放，数据库，DCOM，GUI虚拟用户，Java记录/回放，网络，Oracle电子商务，远程访问，远程桌面，富互联网应用等。</span><span class='green'>它的功能非常优秀齐全，但是价格也非常的不便宜。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">135</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>免费测测试工具有微软的Web Application Stress Tool工具，OpenSTA等。</span><span class='green'>其中OpenSTA是一款功能丰富的基于GUI基准实用程序，它可以执行脚本进行HTTP和HTTPS衡量性能指标的负载测试，它现如今只能运行于windows系统中。</span><span class='green'>它的脚本是一个被称为“sci”语言的记录，这是一种相当简单的编码语言，支持自定义函数、变量的作用域和随机或顺序列表。</span><span class='green'>而且测试脚本录制完成之后，还可以对其进行按照指定语法的编辑，以满足特定性能指标的分析，它的丰富的图形化界面，极大的方便了测试结果的展示分析。</span><span class='green'>OpenSTA是基于 CORBA的体系结构，它可以虚拟出代理客户，并应用其脚本语言记录通过该代理的所有 HTTP/ HTTPS的通信量，</span><span class='green'>测试人员通过分析 OpenSTA中的各个性能收集器中的性能指标数据，分析整个应用软件的性能情况。</span><span class='green'>OpenSTA最初是由Cyrano公司所编写开发，它们原本想在OpenSTA中编写商业插入模块和支持非web应用程序的性能测试，后来由于资金困难，在2001年被Quotium接管。</span><span class='green'>它的优点就是支持脚本语言而且其压力测试引擎具有可扩展性，可以进行大规模的压力测试。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">136</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>目前，国内研究软件性能测试的机构还是寥寥几家，例如：</span><span class='green'>中国软件测评中心等，而且这些机构缺乏商业化的操作，而且这些一般是政府部门主导下的机构进行软件验收的工作，其对于软件测试没有实质性的作用。</span><span class='green'>国内的研究软件测试的大学主要有清华大学、东南大学、武汉大学等，并取得了一些成果，其中东南大学在web测试框架方面的研究取得了一些成果[13]。</span><span class='green'>在国内的软件开发公司中，软件测试这一过程一直都不太被重视，大部分测试只是停留在功能测试、单元测试。</span><span class='green'>而且软件测试人员的测试技术和规范化程度普遍都不太高[14]。</span><span class='green'>软件测试人员的人数所占开发测试技术人员总数的比例只有大概15%。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">137</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>从一些文献资料来看，国内对性能测试的研究水平还比较低，而且国内研究开发的测试工具数量很少，这或许与国内的软件开发的发展有一定得紧密联系。</span><span class='green'>在国内的软件行业中，软件测试仍然是在一个发展起步的成长阶段，要想超过国外的研究水平仍有相当长的一段路要走。</span><span class='green'>但是在国内，软件测试还属于新兴的行业，其发展速度还是非常快的，相信随着国内软件行业及知识产权保护的发展，性能测试的研究必定会越来越成熟。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">138</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.3软件性能测试方法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">139</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/351.htm' target='right' class='orange' >根据性能测试的目的以及内容的不同，常见性能测试方法能够划分成下面几个种类：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">140</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/352.htm' target='right' class='orange' >强度测试是指在极端匮乏的系统以及网络资源等条件下，监控分析系统的CPU、内存、硬盘使用量、网络带宽等变化情况。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">141</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>负载测试是指在用户正常使用软件的情况下，逐步地地给软件加大负载，观察记载研究系统在各个性能指标方面的改变状况。</span><span class='green'>在达到软件各个性能指标需求的条件下，最后明确软件所能够承载负载量的最大值[15]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">142</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>压力测试是指在正常使用软件的情况下，逐渐加大软件负载，观察软件各个性能的改变状况，最后明确软件究竟在哪种负载状况下，</span><span class='green'>软件的运行状态会处于失效状态，并以此确定软件能够提供的最大服务级别[16]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">143</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/357.htm' target='right' class='orange' >并发测试表示逐步地加大软件的并发用户数量，能够明确软件的性能缺陷和瓶颈以及不能接受的性能点，该测试结合了压力测试和负载测试。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">144</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>稳定性测试是指软件在正常运行状态下，给应用加载一定的负载压力，测试软件能够在这种状况下正常稳定运行的时间，</span><span class='green'>从而考察软件各个性能参数指标在此压力环境下的能够保持正常的数值，它主要测试检验软件能够长时间稳定运行的能力[17]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">145</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/360.htm' target='right' class='orange' >大数据量测试则用于测试当系统处于大数据量的情形下，观测系统的存储、信息查询、数据传输等业务是否能够有明显的不足或者这些方面性能的下降。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">146</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>容量测试是指软件在极限值状态下，检验软件应用是否能够正常运行或者出现各种软件故障，从而确定软件在一定的时间段内，能够持续运行的最大负载。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">147</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4软件性能测试工具介绍</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">148</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/363.htm' target='right' class='orange' >性能测试软件工具能够被划分为如下四种：</a><a href='../sentence_detail/364.htm' target='right' class='orange' >负载测试软件、故障定位软件、系统调优软件和资源监控软件。</a><a href='../sentence_detail/365.htm' target='right' class='orange' >其中主要为负载测试工具，以下文中主要介绍主流的负载测试的工具。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">149</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>负载测试工具的工作原理主要是通过脚本录制、脚本回放、模拟多个用户同时高并发地访问应用系统，</span><span class='green'>这样能够创造出高负载环境，进而能够得出各性能指标的测试数据并对它们进行记录分析，</span><a href='../sentence_detail/368.htm' target='right' class='orange' >形成测试结果报告，找出系统的瓶颈为系统调优提供依据。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">150</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4.1Compuware QALoad</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">151</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>QALoad：</span><a href='../sentence_detail/371.htm' target='right' class='orange' >它是美国Compuware公司研发的客户/服务器（C/S）模式的测试软件，它能够被用于企业资源配置（ERP）以及电子商务应用的自动化负载测试[18]。</a><span class='green'>它能够模拟成千上万个并发的虚拟用户对系统的关键部分进行负载测试，从而能够发现系统中的问题，为系统优化以及成功部署提供保障。</span><span class='green'>QALoad能够执行负载测试，直到到达了并发数的最大值；</span><span class='green'>它也能够执行强度测试，直到发现系统所能负担的并发数的极值；</span><a href='../sentence_detail/375.htm' target='right' class='orange' >可以测试响应时间，直观地衡量用户对系统性能的感受。</a><span class='green'>它主要的用途有如下几个：</span><span class='green'>构建出逼真的负载测试、控制中心控制着全局的负载测试、重复执行发现系统瓶颈、整合的系统资源视图等。</span><a href='../sentence_detail/378.htm' target='right' class='orange' >它支持的协议非常广泛，包括在通信层的Winsock、IIOP、WWW、WAP；</a><span class='green'>数据层的ODBC、MS SQL Server、Oracle、DB2、Sybase等；</span><span class='green'>应用层的SAP、Uniface、JAVA等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">152</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>它的体系结构如下图所示：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">153</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.4 QALoad体系结构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">154</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>由上图的体系结构可知，QALoad的测试组件由两个部分组成：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">155</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>QALoad Conductor，它控制所有的测试行为，如：</span><a href='../sentence_detail/385.htm' target='right' class='orange' >初始化、设置描述文件、生成测试结果，并进行分析生成测试报告。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">156</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/386.htm' target='right' class='orange' >QALoad Player，创建多个虚拟并发的用户来向服务器发送请求调用。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">157</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>它的开发组件包括：</span><a href='../sentence_detail/388.htm' target='right' class='orange' >脚本编辑工具、记录工具、转换工具。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">158</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>依据可以复用且真实的测试，QALoad可以完全的检测出系统的性能以及扩展性，它是QACente的高性能版本。</span><span class='green'>QACenter聚集了全部跨企业级别的自动化测试工具，在完整的软件开发周期中，它可以跨越多种平台，自动化地进行测试的任务的执行，QACente旨在提高软件质量。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">159</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.4.2SilkPerformer</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">160</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer是软件测试行业中最强大以及最容易使用的商业级别负载测试和强度测试工具，它能够检测出系统的性能缺陷并能够调优系统的性能。</span><span class='green'>它使用可视化的脚本生成技术以及能够对拥有成千上万并发用户的应用系统进行性能测试，</span><span class='green'>能够使软件开发公司在应用系统发布部署之前，无需考虑软件规模的大小和复杂程度，</span><a href='../sentence_detail/395.htm' target='right' class='orange' >对其进行健壮性、稳定性、可扩展性进行全部的性能测试。</a><span class='green'>SilkPerformer拥有强大的诊断工具和测试报告管理功能，它能够帮助隔离出系统的故障错误并快速做出处理措施，</span><a href='../sentence_detail/397.htm' target='right' class='orange' >从而可以从很大的范围内缩短软件测试的周期以及加快软件系统上线的速度。</a><span class='green'>SilkPerformer允许创建强大现实的负载测试和压力测试用户一系列应用程序环境，包括最新的网络和移动技术。</span><span class='green'>负载测试解决方案主要模拟任何大小的峰值负荷，从而用户没有必要投资负载测试和压力测试的硬件和设置。</span><span class='green'>在发布周期的早期，尽早发现问题能够使开发人员在软件到达最终用户之前纠正问题，减少项目周期时间和开发成本。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">161</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer主要有以下几个功能：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">162</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>部署多个虚拟用户节点，由单一的中央控制器对它们进行管理并进行实时监控，如图所示SilkPerformer体系结构；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">163</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer可以将不同的用户进行分组并且将每个组分布到不同机器上，这样可以模拟不同地理位置的空间分布。</span><span class='green'>而且，用户还可以对应每一个类型，不同类型可以使用不同的负载；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">164</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer可以模拟很多种不同类型的网络，支持的网络类型甚至达到了30中之多，如：</span><span class='green'>wireless，GPRS，Modem等。</span><span class='green'>每一种类型，用户都可以进行各自参数的设置；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">165</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>SilkPerformer采用TrueCache技术，可以模拟不同浏览器的缓存、cookie管理，这样极大的模拟实际情况的负载，而且HTTP请求都是精确的符合实际情况；</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">166</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 2.5 SilkPerformer体系结构</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_3.htm">上一页</a>
<a class="pagelink" href="paper_5.htm">下一页</a>
<a class="pagelink" href="paper_12.htm">尾页</a>
页码：4/12页
]
</div>

<br><br><br>
<div style="margin-left:25px">

<img src="../../images/guanwang.gif">
</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2015 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
